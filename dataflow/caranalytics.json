{
	"name": "caranalytics",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText7",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText8",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "window1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Branch_ID as string,",
				"          Dealer_ID as string,",
				"          Model_ID as string,",
				"          Revenue as integer,",
				"          Units_Sold as string,",
				"          Date_ID as string,",
				"          Day as string,",
				"          Month as string,",
				"          Year as string,",
				"          BranchName as string,",
				"          DealerName as string,",
				"          Product_Name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          Branch_ID,",
				"          Dealer_ID,",
				"          MODEL = Model_ID,",
				"          Revenue,",
				"          Units_Sold,",
				"          Date_ID,",
				"          Day,",
				"          Month,",
				"          Year,",
				"          BranchName,",
				"          DealerName,",
				"          Product_Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(Year>'2014') ~> filter1",
				"filter1 derive(MODEL_ID_NEW = iif(locate('-', MODEL) > 1, left(MODEL, locate('-', MODEL) - 1), MODEL)) ~> derivedColumn1",
				"derivedColumn1 window(over(Year,",
				"          Revenue),",
				"     desc(Revenue, true),",
				"     Rank = rank()) ~> window1",
				"window1 aggregate(groupBy(MODEL_ID_NEW,",
				"          Year),",
				"     avg_revenue = avg(Revenue),",
				"          lowestrated = first(MODEL_ID_NEW),",
				"          highestrated = last(MODEL_ID_NEW),",
				"          numberofunitsold = count()) ~> aggregate1",
				"aggregate1 alterRow(updateIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          product_id as string,",
				"          product_name as string,",
				"          price as string,",
				"          stock as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}